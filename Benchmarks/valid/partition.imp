program partition
pre n > 0
post 0 <= low && low <= high && high <= n
post forall i, 0 <= i && i < low ==> a[i] < v
post forall i, low <= i && i < high ==> a[i] = v
post forall i, high <= i && i < n ==> a[i] > v
is

  low, high := 0, n;
  mid := 0;
  while mid < high
    inv 0 <= low && low <= mid && mid <= high && high <= n
    inv forall i, 0 <= i && i < low ==> a[i] < v
    inv forall i, low <= i && i < mid ==> a[i] = v
    inv forall i, high <= i && i < n ==> a[i] > v
  do
    x := a[mid];
    if x < v then
      a[mid], a[low] := a[low], x;
      low, mid := low + 1, mid + 1;
    else
      if x = v then
        mid := mid + 1;
      else
        a[mid], a[high-1] := a[high-1], x;
	high := high - 1;
      end
    end
  end
end
